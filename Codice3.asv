clc
clear

i = 1;
check = false;
while ~check

    [filename, folderpath] = uigetfile;
    if isequal(filename, 0)

        fprintf('The user selected all the data \n');
        check = true;

    else
        filepath = fullfile(folderpath, filename);
        load(filepath)

        %% EXTRACTING FREQUENCIES

        %One can extract frequencies just from one dataset assuming that all the
        %data are taken at the same frequencies
        
        %Contains the name of the curves, to extract frequencies
        temp_name_vector = string(data_organized(:,1,1));
        
        %Searching for the 'Filename' legend in data, because how the first code is
        %done this is needed
        index_filename = cell2mat(strfind(temp_name_vector,'Filename'));
        
        %If there is the legend 'Filename', we eliminate it
        if ~isempty(index_filename)
            temp_name_vector(index_filename,:) = [];
        end

        obtained_frequencies = regexp(temp_name_vector(:,1), '\d*.\d*Hz', 'Match');
        
        frequencies_number = regexp(string(obtained_frequencies(:,1)), '\d*.\d', 'Match');
        frequencies_number = str2double(string(frequencies_number));

        %% Getting statistics

        %Getting the right Parameters, in this case the G' and G''
        flip_Gprime(:,:) = cell2mat(data_organized(2:size(data_organized,1),23,:));
        flip_Gsecond(:,:) = cell2mat(data_organized(2:size(data_organized,1),24,:));
        
        %This command is needed to easily obtain G' and G'' vs frequencies
        Gprime = flip_Gprime.';
        Gsecond = flip_Gsecond.';

        %Getting the median for G' (separeted for future errors check
        %maybe?)
        for j = 1:size(Gprime,2)
            median_Gprime(i,j) = nanmedian(Gprime(:,j));
        end

        %Getting the median for G" (separeted for future errors check
        %maybe?)
        for j = 1:size(Gsecond,2)
            median_Gsecond(i,j) = nanmedian(Gsecond(:,j));
        end        
        
        %Getting the confidence interval for G' 
        for j = 1:size(Gprime,2)
            n_NaN_prime = numnan(Gprime(:,j));
            standard_error_prime = nanstd(Gprime(:,j))/sqrt(size(Gprime,2)-n_NaN_prime);
            t_score_prime = tinv([0.025 0.975], size(Gprime,2)-1-n_NaN_prime);
            CI_prime(i,j,:) = nanmean(Gprime(:,j)) + t_score_prime*standard_error_prime; %CI(i,j,1) has lower limit, CI(i,j,2) has the upper limit
        end

        for j = 1:size(Gsecond,2)
            n_NaN_second = numnan(Gsecond(:,j));
            standard_error_second = nanstd(Gsecond(:,j))/sqrt(size(Gsecond,2)-n_NaN_second);
            t_score_second = tinv([0.025 0.975], size(Gprime,2)-1-n_NaN_second);
            CI_second(i,j,:) = nanmean(Gsecond(:,j)) + t_score_second*standard_error_second; %CI(i,j,1) has lower limit, CI(i,j,2) has the upper limit
        end
        
        %% Plotting G'
        c = uisetcolor;

        %Fitting both single and double exp
        fit_Gprime_exp = fit(frequencies_number(:,1),(median_Gprime(i,:)).','exp1');
        fit_Gprime_exp2 = fit(frequencies_number(:,1),(median_Gprime(i,:)).','exp2');
        coeff_Gprime_exp = coeffvalues(fit_Gprime_exp);
        coeff_Gprime_exp2 = coeffvalues(fit_Gprime_exp2);
        
        %Plotting the medians and the CI
        f1 = errorbar(frequencies_number(:,1),median_Gprime(i,:),CI_prime(i,:,1),CI_prime(i,:,2),[],[],...
            '-o','Color',c,'MarkerFaceColor',c);
        hold on

        %Plotting the fits
        c_1 = uisetcolor('Choose color for exp1 fit');
        x_fit = frequencies_number(1,1):1:frequencies_number(size(frequencies_number,1),1);
        y_fit(:,1) = coeff_Gprime_exp(1,1)*exp(x_fit*coeff_Gprime_exp(1,2));
        f2 = plot(y_fit,'Color',c_1, 'LineWidth',0.7);
        legend({'G exp1 fit'})
        hold on
        y_fit_2(:,1) = coeff_Gprime_exp2(1,1)*exp(x_fit*coeff_Gprime_exp2(1,2))...
            +coeff_Gprime_exp2(1,3)*exp(x_fit*coeff_Gprime_exp2(1,4));
        c_2 = uisetcolor('Choose color for exp2 fit');
        f3 = plot(y_fit_2,'Color', c_2, 'LineWidth',0.7)
        hold on

        %% Plotting G"
        c_3 = uisetcolor;

        %Fitting both single and double exp
        fit_Gsecond_exp = fit(frequencies_number(:,1),(median_Gsecond(i,:)).','exp1');
        fit_Gsecond_exp2 = fit(frequencies_number(:,1),(median_Gsecond(i,:)).','exp2');
        coeff_Gsecond_exp = coeffvalues(fit_Gsecond_exp);
        coeff_Gsecond_exp2 = coeffvalues(fit_Gsecond_exp2);
        
        %Plotting the medians and the CI
        errorbar(frequencies_number(:,1),median_Gsecond(i,:),CI_second(i,:,1),CI_second(i,:,2),[],[],...
            '-o','Color',c_3,'MarkerFaceColor',c_3)
        hold on

        %Plotting the fits
        c_4 = uisetcolor('Choose color for exp1 fit');
        x_fit = frequencies_number(1,1):1:frequencies_number(size(frequencies_number,1),1);
        y_fit(:,1) = coeff_Gsecond_exp(1,1)*exp(x_fit*coeff_Gsecond_exp(1,2));
        plot(y_fit,'Color',c_4, 'LineWidth',0.7)
        hold on
        y_fit_2(:,1) = coeff_Gsecond_exp2(1,1)*exp(x_fit*coeff_Gsecond_exp2(1,2))...
            +coeff_Gsecond_exp2(1,3)*exp(x_fit*coeff_Gsecond_exp2(1,4));
        c_5 = uisetcolor('Choose color for exp2 fit');
        plot(y_fit_2,'Color', c_5, 'LineWidth',0.7)
        hold on        


        clear Gprime; clear flip_Gprime,
        clear Gsecond; clear flip_Gsecond
    end

end